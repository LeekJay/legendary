name: Release

on:
  push:
    tags:
      - 'v*' # 匹配以v开头的标签，如v1.0.0

jobs:
  release:
    runs-on: windows-latest # 需要Windows环境构建exe
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get version from tag
        id: version
        shell: pwsh
        run: |
          # 从标签名中提取版本号(去掉v前缀)
          $version = $env:GITHUB_REF -replace 'refs/tags/v',''
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "VERSION=$version" >> $env:GITHUB_ENV

      - name: Build application
        env:
          PYTHONIOENCODING: utf-8
        run: |
          python build.py

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}

            ### Changes
            - Auto-generated release

            ### Download
            [Legendary_${{ steps.version.outputs.version }}.exe](release/Legendary_${{ steps.version.outputs.version }}.exe)
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/Legendary_${{ steps.version.outputs.version }}.exe
          asset_name: Legendary_${{ steps.version.outputs.version }}.exe
          asset_content_type: application/octet-stream
